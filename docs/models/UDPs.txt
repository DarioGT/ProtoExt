
121018  Udp genericas a un modelo abstracto 
    **  Ver si se puede pegar una UDP generica ( considerando el contenttype ) un modelo abstracto ( meta: asbtrat = true ) 
        No se puede, genera un error indicando q el modelo no existe o q es abstracto. 

    **  La solucion es crear una tabla de Udps cuando sea necesario 'UdpXyz'
        y apuntar con el parametro     protoExt = { 'udpTable' : 'ModelUdp' } 
 
        al crear la definicion el systema verificara si existe 
        y agregara los parametros necesarios para manejar las UDP 


    **  otra solucion seria crear en protoLib un modelo con relaciones genericas, el problema de esto es que la info quedaria en la db de config 
        y no en la db de produccion, la informacion de produccion no debe ir nunca a la definicion. 



from protoLib.utilsBase import  strNotNull

#Las UDP's usan relaciones genericas para poder conectarse a cualquier modelo definido
class ProtoUdp(models.Model):
    # Estos 3 campos derminan una relacion generica a una entidad de la Db,
    # - content_type es el nombre de la entidad q se extiende,
    # - object_id  es el registro al cual se relaciona la info 
    # - content_object declara la referencia  al objeto padre ( entidad, id ) para  django.  
    content_type = models.ForeignKey(ContentType)
    object_id = models.PositiveIntegerField()
    content_object = generic.GenericForeignKey('content_type', 'object_id')

    # El codigo es el nombre 
    code = models.CharField(max_length=50)
    valueUdp = models.TextField(blank = True, null = True, max_length=200)

    def __unicode__(self):
        return (strNotNull(self.content_type) + '.' + strNotNull(self.code) + ': ' + strNotNull(self.valueUdp))

    class Meta:
        #Las UDP's deben ser unicas pues se presentan como columnas de la tabla  
        unique_together = ('content_type', 'object_id', 'code',)

