*** Model inheritance 

 There are three styles of inheritance that are possible in Django.

  ---->  Abstract  base classes are what you're after.
  Often, you will just want to use the parent class to hold information that you don't want to have 
  to type out for each child model. This class isn't going to ever be used in isolation,

  * El modelo no representa una tabla y no existe como tal, solo es una plantilla
  

  ----->  Multi-table inheritance is the way to go.
  If you're subclassing an existing model (perhaps something from another application entirely) and
  want each model to have its own database table, 
  

 
  ---->  Proxy models.
  Finally, if you only want to modify the Python-level behavior of a model, without changing the models
  fields in any way, you can use 

  * Para crea un modelo q apunta a la misma tabla base, 
  * permite modificar las reglas de negocio dentro de la clase  