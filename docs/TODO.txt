To Do:  

**  archivo de deploy 
**  Fecha para el doctorado 
**  recuperacion de gastos de estudio
**  BPMN4ws 
**  fDroid ( catchNote. photoEditor, OpenDoc, dropBox, kinSoft, VuDroid, fbReader, OsmAnd )
	
-------------------
    title: 'Hello',
    width: 200,
    html: '<p>World!</p>',


	Bk db 
	Borrar db( protoViews, protoTables, ) 
	Borrar Migrations ( protoLib, prototype )
	syncDb 


	navegacion al link del zoom ( eliminada para carga dinamica )

	form 
		Ok no se ven los idtems de detalles al editar 

		no se puede seleccionar una vista en el detalle 
		la vista no entra en edicion ( probar la edicion  _

		agregar AddOther 
		reset x close 
		verficar permisos 


	funciones 
		crear tabla de funciones q sea interpretada en Django al momento de hacer un select 

		A;lternativas 
			__import___
			eval 
			exec 

		no sirven 
			ast.literal_eval   solo evalua tipos de datos 


	Filtros zoom 
		Ok PAra pasar los filtro hay q tener una referencia al store de base 
		Ok todos los campos llevaran un idPRotoGrid 
		como se hace cuando los dos campos se actualizan en la forma 
			se debe actualizar el rowData  al momento de hacer el setValue 

	zooms,  
		no cargar la pcl hasta q se crea el objeto 

	tabClose
		destruir los objetos asociados 

	Log 
		crear logs por utilizador q hizo sobre q tabla etc. 


	Resaltar el boton de detalle activo 

---------------------------------------------------------------	   


	Django - Sessions 

	default de direction = sortOrder ?? 


	prototipos 
		intialsort en los prototipos 
		secuencias para manejar los autonum 

	Actions
		permsiso por accion 

	Pruebas 
		Procedimiento automatico para cargar y descargar datos de prueba,  invocados desde el menu 

	Proyecto de test 
		generar proyecto de pruebas en Django y en Ext 

	Exportar CSV

	Seguridad ------------------
		diferentes niveles ( usuario, grupo, all )
		permisios a nivel de campo
		verificar permisos en el guardado de objetos de conf 

		probar con un ToDo Por usuario en una pcl q se invoque desde statusbar 

	----------------------------------
	
	pasar la meta a python 
	editer les languajes 

	separacion de los vinculos y carga diferida 
		panel adicional 

	
	Canvas ( modelo grafico  ver  doc.Extjs.canvas )

	Verifcar por q algunos htmlset no quedan readOnly

	Reportes 
		por q se abre en un popUp y no en un tab como las otras impresiones 


	JPlumb  Libreria a mirar con detenimiento 
	DjangoReporter 


Prototipo
	copiar modelos completos para simular versiones 


----
parametrizacion de displaylist para el zoom y los detalles 

Organizador 
    Proyecto de agenda,  q puede convertise en un admin de proyectos 
    
protoFace 
    blogs y estados al estilo fb  o tweet ??  

Para el manejo de empresas y entornos,  
    cada pcl podra solicitar una serie de var de entorno, antes de cargar se preguntaran por las variables 
    de entorno q se manejaran dentro del profil del usuario, este podra guardarse para usos futuro y podra 
    ser modificado como una relacion  variable - valor ( combo con valores posibles )

Forma 
    Filtrar los campos existentes en el fields 
    Retorno del zoom.  debe actualizar el activeRecord y la forma para evitar campos invisibles. 
    Manejo de contenedores,  manejo de detalles 
    Actualizacion de details seleccionar y guardar 


Discretas 
    Implementar manejo de variables discretas, 
    
Icono
    GetMenu debe traer el icono tambien de la definicion guardada si existe,  ahora lo trae solamente de la metadirecta 

    
DiplaySet 
    q puede contener tambien un set  HiddenFields, ReadOnlyFields,  Los titulos y el resto de la 
    definicion siempre seran las mimas
    
Detalles - DisplaySet  
    LA definicion de cada detalle puede invocar un displaylist ( elto de displayset )  de la entidad detalle, si no se especifica 
    o no se encuentra se utilizara el listDisplay 
    
forma 
    Revisar el beforeDrop para limitar los contenedores de cada elto 
    La edicion en forma considera los detalles en una sola transaccion,  ver la definicion del doc automatico  
     
Zoom 
	@ZoomModel 	
	El valor del zoom por defecto solo necesita la entidad base, este attr es automatico  
	
	Por defecto se configura una grilla con el valor __str__ y el ID. 

	@ZoomView  ( app.model.zoom )
	Luego se pueden manejar los campos del zoom q pueden ser asociados a una vista sobre la entidad  app.model.zoom ( vista )
	esto permitira configurar los valores presentado, esta conf es manual 
	
	de ZoomView tomara sobre todo el listDisplay y la conf de campos ( flex entre otras )
	
	@ZoomOnly = True/False
	Las vistas podran configurar si son zoomOnly para no aparecer en el menu 

	@ZoomReturn 
	se deben configurar el el fkey q llama por q depende siemrpe 
	de la conf del objeto base, esto debe ser una llamada en el retorno del zoom, para buscar basado en la tabla foranea   		
	no es need presentar los campos en el zoom para retornarlos, 

Tablero de control  ( cubos )

	Se puede definir en el menu y definir la pseudo entidad como una coleccion adicional sobre la misma entidad, 
	asi se manejaran vistas diferentes sobre un mismo modelo y un mismo admin. 
	
	Crear una pseudo entidad q cargue valores agrupados y permitir el manejo de dimensiones de detalle. 
	
	El menu tedra q manejar un campo para el modelo,  para no cambiar la definicion, 
	podria ser manejar un nombre compuesto,   modelo.vista,  asi se mantendria la definicion.  
	Si no existe la vista, entonces el modelo es la base, en caso contrario se revisa la coleccion de vistas q sera parte del admin.  
	
	De esta forma la misma tabla, el mimsmo modelo sirve para poder majar deiferentes presnetaciones incluso para manejar los agrapados.  verificar los agraupados.  y verificar si se puede hacer un grafico/ 



	edicion 
		Revizar Allow Null


Manejo de edicion condicional segun datos
-----------------------------------------
   Parametros: una coleccion ( CampoCriterio, Condicion, Lista de campos habilidatos ) 
// if (e.record.get('status') == "0")
    // grid.getPlugin('rowEditing').editor.form.findField('xx').disable();
// else 
    // grid.getPlugin('rowEditing').editor.form.findField('xx').enable();
                


    Reportes
--------------
    Para la impresion de la grilla se hace una unica tabla, se puede agregar dos columnas cerradas 
    para manejar totales y agrupamientos en la col de totales se puede manejar el numero de linea,
    en la ultima linea se hace el conteo, 
    
    Los agryupamientos se definien como hace el Django reports
    y en la pagina se maneja el onready windows.print  de js 


    Criterios 
----------------
    En la barra de criterios agregar un boton Add, este boton solo creara nuevos elementos que se 
    enviaran al momento de enviar el criterio. 

    
	Agregar el locking de columnas para la grilla 
	AGregar manejo de grupos ( permite agrupas incluso columnas ocultas )



---


    Copiar del admin producto a la comunidad Django 
    

    **  Abrir un blog, estabelecer el roadmap, tomar codigo basico del admin 
    leer toda la definicion del admin. separar un proyecto aparte. 

	
	** Busqueda  QBE
    Agregar busqueda textual sobre campos predefinidos 


	** Filtros 
	Los filtros sobre las columnas tambien son una buena opcion 
	file:///D:/data/ExtJs/ext-3.4.0/examples/grid-filtering/grid-filter-local.html


------------------------------------------------------------------------

	Manejar los modelos tambien dinamicamente Db
	Independizar las DB 	


	en menu recorrer directamente los modelos 


-----------------------------------------

 