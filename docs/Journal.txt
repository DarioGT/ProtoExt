12/11

Status en la forma si hay camopos invalidos no aparece 

Guardar solo las variables con valores 
    ** Revizar checked 
    y el agregar filterset en la pci 


** protoDefinicion editada no hace sort x active 
* Enviar a la meta solo lo necesario, los campos nombre typo, udps, searchfields, sortfields 
** fecha y boleanos no se cargan, y la edicion produce valores formateados de manera no conveniente 
** Cargar las UDP con sus tipos, o sea q todo se hace en python, por q el store en Ext recibe los tipos con sus objetos correspondientes.

** Leer todo del admin y de los modelos, usar la logica del admin
 
    ** cambiar Db por MSSS y probar  
    ** eliminar llamados al modelo "Concept" leer del admin     

    **  Cargar la definicion de la grilla directamente de la dB
    HAce una tabla Buffer para este manejo 

    ** Separa el llamado Ajax como un singleton, 
    Esto hara q solo se llame una vez 
    Tomar como referencia  feed-viewer/app/lib/FeedValidator.js   ( mvc )

    ** Seleccion de Columnas visibles ( vista )
    PAra el manejode las columnas no se usaran tabs, pues este objeto es automaticamente un contenedor y el objeto contenido 
    hace referencia a su contenedor, de tal forma q al intentar compartirlo en diferentes tabs, solo aparece en el ultimo q 
    se asigno,  habria q jugar con esto dinamicamente y tocaria escribir mas codigo.  
    
    # TODO: Otras propiedades de base de los campos, usarlas para la edicion             
    #field.default, field.editable, field.error_message, field.help_text, fiedl.verbose_name_plural
    #field.blank, field.null, field.choises 
    


    
NO  Ext.ux.form.SearchField
    Es un widget especializado en esto,  y con un campo de base adicional se podria manejar 
    busquedas sobre campos especificos o sobre todos los campos buscables
     
    http://joekuan.wordpress.com/2011/04/04/selective-column-search-using-extjs-combo-and-searchfield-together/
    file:///D:/data/ExtJs/ext-3.4.0/examples/form/custom-access.html
    file:///D:/data/ExtJs/ext-3.4.0/examples/forum/forum.html

    Finalmente las busquedas se manejara construyendo los QBE en Python con el ORM 



    
        
Ok    Separar los datos dela  definicion 



Ok  Otras 
    Pasar la vista a ProtoLib
    Q la vista genere los datos de manejo tomados de la definicion Db

Ok  Nagegador  Master Detail 
    Agregar vinculos de navegacion a la grilla
    Manejo de navegacion con dependencia padre hijo 


NO  Cambiar el InLine por una tabla simple con una columa de modificacion y otra de seleccion (hipervinculo sobre la llave), 
    la edicion no se hara inline, se hara todo el tiempo em la forma base del modelo,

    Finalmente, se decide transladar todo a ExtJs


Ok  Manejo de Meta para unificar la importacion de Modelibra y OMS,. Se basa en Django para el manejo del ORM
Ok  Projecto Django para visualizar el diccionario.  



-----------------------------------------------------------------------
Soporte ExtJs

        PAra el manejo de extjs pienso q la manera mas optima es utilizando el  Django-ExtDirect 
        
        Hay varias versiones,  
            * github.revolunet-ext-js
              fue susituido por revulunet.django-extdirect
              baje un fork q trae ejemplos

            * github.ext-direct
              Es un proyecto generico q trae alguna forma de utilizarse en django
              lo descarte por q se dedica mas otros productos en python q a django.

            * github.revolunet-extdirect
              es bsado en sancho y es una version siguiente a revolunet-ext-js
              dice q requiere  Ext.ux.AwesomeCombo

            * Ext.ux.AwesomeCombo
              para instalarlo solo dice q se copie en las estaticas,
              podria ser en ext3.x o directamene en el proyecto,
              voy a copiarlas en el proyecto directamnte




12/06/06

    Ocultar el control de sort y hide/show cols en la g


12/02/03


    Se agrego el worwrap 
    Se puso a funcionar el QBE
    
    


9/26/2011 10:18:00 PM
    
Ok  Buscar librerias ExtJs para Django 
Ok  Buscar donde se procesa el InLine ( girlla de valores ) para ejecutarlo en extjs 
    
        

11/11/30 

El autoPK, no es necesario, el id es una columna interna q no necesita ser parte de la grilla

En el caso del maestro detalle, al interrogar la llave del maestro se verificara antes si es 
id, pk, %model_id %model_pk  en cualquiera de estos casos se tomara el  internalId de la grilla

El internalId a pesar de haber sido redefinido con otro nombre, siempre usa id, poria intentar 
redefinirlo en el reader, pero por ahora solo reconfirmo el 'id' para no tener problema con futuras versiones  

        #if (idName not in self.QFields ): 
#            fKey = { 
#                 'name':    idName , 
#                 'header':  'id',
#                 'xtype':  'numbercolumn',
#                 'filterable':  False, 
#                 'sortable' : False, 
#                 'hidden':  True, 
#                 }
#            self.fields.append(fKey)
#            self.QFields += ',' + fKey['name']



11/11/26  Autolink

	La funcionalidad de autolink, examina el modelo para agregar las tablas relacionadas, 
	maestros  o detalles, 

	para probarlo cree las tablas siguientes 

	class Tabla1(models.Model):
	    code1 = models.CharField(blank = True, null = True, max_length=200 )

	class Tabla11(models.Model):
	    code1 = models.CharField(blank = True, null = True, max_length=200 )
	    tabla1a = models.ForeignKey('Tabla1', related_name= 'prueba1a')
	    tabla1b = models.ForeignKey('Tabla1', related_name= 'prueba1b')
	    tabla1c = models.ForeignKey('Tabla1', related_name= '+')
	    
	class Tabla12(models.Model):
	    code1 = models.CharField(blank = True, null = True, max_length=200 )
	    tabla1a = models.ForeignKey('Tabla1')


	La Tabla11 tiene 3 relaciones a la tabla1, la 1c no tiene relatedName,  por lo tanto no aparece 
	mapeada en la tabla ppa. 


	model._meta._name_map 
	
	_related_objects_cache  Contiene la informacion

**	hay una coleccion parents !!!   
	._meta.get_parent_list():  Solo las tablas con herencia ?? 


	for rel in opts.get_all_related_objects(): # + opts.get_all_related_many_to_many_objects():

	    rel.model._meta.object_name
	    rel.model._meta.pk.name
	    rel.field.name

11/10/27  MAestro detalle 

		MAnejar un panel de detalle resulto ser mas dificil q manejar los tabs al momento 
		de hacer el render de la grilla,  
		
		Version de prueba de una grilla sobre el detalle, creacion de tabs dinamica 
		** Corregir si el tab ya esta creado, solo se debe activar 
		
		** Manejo de la navegacion basada en el filtro , filtrar primero la grilla padre 
		
		** por q ahora el store no genera detalles adicioaneles en la creacion de cada grilla ??	
	
		

11/10/27  Formato de la ventana 

		Formato de la ventana,  
		El manejo de detalles se pasa a un menu,  el QBE se manejara por campos en Tbar 
		Las vistas ( tabas de cols ) se manejaran en un menu con cada una de las vistas seleccionadas 
		
		Intento por montar la grilla en forma dinamica,
		  
		no se puede reemplazar la variable de objeto pues la referencia siempre queda al objeto anterior 
		habria q reconfiguar el store 
		
		De todas maneras hay q sacar el store, por q los eventos para configuar MD ( maestro detall ) son del 
		store, 
		
		intente con Ext.getCMP y me trae la referencia, voy a seguir intentando como cambiar la ref del objeto obtenido 
		dinamicamente 
		
		verificar si los id son unicos, por q si para cada ventana usa el mismo id, todas se encuentran en la misma pagina 
		y generara un error. 
		 
		

11/10/25  Enviar la configuracion de detalles y tabls

		En la construccion del json estoy enviando una configuracion basica de tabs y de los detalles  (protogrid.py)

            ,'protoTabs':[
                 {'T1': ['Col1','Col2']},
                 {'T2': ['Col3','Col2']},
                 ]
            ,'protoDetails': {
                 'Concpet1': 'Id = %Id',
                 'Concept2': 'Id = %Id'
                 }

Ok		pero no encuentro la conf  q envio en el store
		La llamada Ajax hace desde ProtoGrid  ( POST )

Ok		1. Verificar q este llegando,  ( manejar el store )

		Ext.data.HttpProxy( url, method )
        La lectura se hace asi

              ,proxy:new Ext.data.HttpProxy({
                    url:'protoExtjsGridDefinition/?' + protoEntityName
                    ,method:'POST'
                })

                ,reader: new Ext.data.JsonReader({
                    root:'rows'
                    ,id:'id'
                })


        La conf de columnas puede manejarse simplemente asignando la variable columns 
        
        // Column Model shortcut array
        var cols = [
          { id : 'name', header: "Record Name", width: 160, sortable: true, dataIndex: 'name'},
          {header: "column1", width: 50, sortable: true, dataIndex: 'column1'},
          {header: "column2", width: 50, sortable: true, dataIndex: 'column2'}
        ];

        Q es lo q viene en mi store.metaData.fields
        
        Estaba en el primer nivel con los campos de control,  lo inclui en la meta y ya puedo verlo desde js.

        Ahora es como pasarla para verla como una propiedad de la grilla?  asi podre desde el panel exterior configuar el entorno (navegacion)
        Hacer un getMeta en la grilla??
        
11/10/26        
        No se independizo el store y se lee el evento del metachange, 
        Peparacion del ejemplo en ext3.4/ejemplos/prueba/protoPanel
        

----------------------------------------------------------------------------------
