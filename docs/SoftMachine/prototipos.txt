SandBox 

PAra el manejo de prototipos onLine es necesario poder manejar diferentes modelos creados dinamicamente, 

El sandBox puede ser una configuracion de servidor q permita diferentes ambientes, pero sigue existiendo 
el problema de la creacion dinamica de modelos y su ejecucion 


Modelos dinamicos 

Los modelos dinamicos pueden ser de tres tipos,   
    - key-Value,  ( http://en.wikipedia.org/wiki/Entity-attribute-value_model )
                  ( http://nativexmldatabase.com/2011/01/21/namevalue-pairs-a-pretty-bad-idea-in-xml-as-in-relational/ )
    - jsonField,  ( http://martinfowler.com/eaaCatalog/serializedLOB.html )
    - dynamicModel
    
Key-value : es una extencion del concpeto de UDP, las busquedas son complicadas y la carga puede ser lenta,
este modelo se justifica cuando el contenido de los campos es grande, por ejemplo templates de pantalla o reporte 

 
jsonField : puede ser el mas flexible de todos, el campo tiene la definicion de los otros campos q sera leido y adicionado 
a la fila de retorno, la busqueda va sobre el campo completo, no permite criterios especificos,  los nombres de los campos 
no pueden ser usados como criterios de busqueda ( son siempre positivos )

dynamicModel : usando django-south se puede manejar la creacion dinamica de modelos, django maneja la funcion type() 
para crear clases dynamicamente,  es complejo de implementar y ademas requiere continuos cambios en la db, lo q puede 
ser lento,  en produccion seria la mejor opcion.


DEfinicion 

La definicion se puede hacer usando el diccionario, pero la lectura relacional puede ser lenta, ademas seria bueno 
tener un nivel de publicacion para poder hacer los cambios q se requieran,  este proceso podria ser en ambos sentidos,
es decir a partir de una vista publicada, se podria obteer la definicion relacional para edicion. 

La edicion podria ser directamente en la meta, evitando el manejo relacional, en este caso la publicacion seria simplemente 
un atributo ( o una copia si se requiere )

DEfinicion 

conceptName 
conceptDefinition    
usr
nodoAuth    ( jerarquia de autorizacion ) 
version     ( manejar el history ) 


--------

Las tablas generadas por el prototipador se crean en unico modelo ( tabla administrada por Django ), 

Esta tabla fisica contiene un 
    id,
    tableName 
    campo json con las ocurrencias de todos los campos
    info de seguridad 

La tabla manejar un QueryManager q permita hacer una busqueda dentro del campo json para poder encadenar los maestros detalle. 

La definicion de la meta si encuentra un jsonField toma todas las UDP directamente. 

Queda una tabla con la definicion basica y la generacion de las pcl, 

1. Query ??
2. Menu ?? 
