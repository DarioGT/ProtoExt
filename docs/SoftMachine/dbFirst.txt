En la situacion DbFirst Django solo maneja un unico campo como llave unica, 

Si no existen llaves o  PK es una combinacion de campos es necesario crear una llave unica artificial 

si la llave unica es compuesta podria crearse un Id combinandonalas, esto no serviria para hacer edicion, 
pues Django intentari todo acceder a la llave definida 

Se puede definir un campo virtual q genere un consecutivo ( ya sea en el modelo o en Q2List )

** TODO: Las llave para la navegacion MD, deben ser compuestas

La solucion es asignar un primary_key a cualquier campo y 
crear un indicador para saber q esta llave es falsa,  el prototypeur 
crear un id secuencial para pder desplegarlo en la grilla 

class PropertyDom(models.Model):
    _fakeId = True
    code = models.CharField( primary_key=True )
    domain = models.ForeignKey('Domain' ,  primary_key=True)

** Puede asignarse mas de un pk

Desde luego con esta opcion la tabla no es editable     

TODO:  enviar el _fakeId como parte de la meta para evitar todo tipo de edicion 
TODO:  controlar el _fakeId para evitar todo tipo de edicion en el backEnd 

deseable hacer un procedimiento q permita hacer el inspectDb 
crear la conexion dinamicamente y tambien los modelos. 
