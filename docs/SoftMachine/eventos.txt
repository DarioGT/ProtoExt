Existe eventos a nivel de registro y  a nivel de campo 

El evento debe exponer un objeto con toda la funcionalidad necesaria 
para trasnferir de manera clara el control al codigo del evento. 

un objeto 

    SM.db.
    
    SM.activeRegister 
    
    SM.tools 
    SM.tools.date.
    SM.tools.xxxx
    
    SM.mdet.  
    
El disparo de los eventos debe antes verificar si existe y opcionalmente hacer una
verificacion sintactica basada en expresiones regulares 


Segun el evento se debe ubicar el sitio en el codigo para disparalo,  se debe crear un manejador de 
eventos q centralice el disparo 

todos los evnetos deben leer un codigo de retorno q permitira entre otras abortar un evento,  por ejemplo en 
el caso de los "beforeZXxxxxx" 


El evento podria disparar un evento en la meta,  ejectur una accion o un script de libreria/ 

En el caso de la libreria Se podria crear una libreria de eventos pregargados para no leer todo el tiempo los fuentes js, 


    "fieldBusinessRules": {
      "properties": [
            "dblClick",
            "afterCellUpdate",

            "beforeCellEdit",
            "beforeCellUpdate",

            "zoomConfigure",
            "zoomReturn",
            "reposition",
            "getLinkFilter",
            "validationComplete"
      ]
    },

            "afterRowDelete",
            "afterSave",
            "beforeRowDelete",
            "beforeRowInsert",
            "beforeOpSave",
            "beforeValidate",

            "issRowLoad",


    "businessRule": {
        "properties": [
          "name", 
          "handler",
          "src",
          "type",
          "field"
          ], 
        "addPrompt" : "Parametros de acciones", 
        "allowDel" : true
        }, 


  "businessRulesText": {
      "description": "business rules",
      "properties": [
            "afterCellUpdate",
            "afterRowDelete",
            "BeforeCellEdit",
            "BeforeCellUpdate",
            "BeforeRowDelete",
            "BeforeRowInsert",
            "dblClick",
            "issZoomConfigure",
            "issBeforeVslidateVr",
            "issHelpReturn",
            "issRowLoad",
            "reposition",
            "getLinkFilter",
            "afterOpSave",
            "beforeOpSave",
            "issValidationComplete"
      ]


 