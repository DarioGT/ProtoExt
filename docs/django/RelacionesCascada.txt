# *** ForeignKey.on_deleteÂ¶

  The possible values for on_delete are found in django.db.models:

  CASCADE: Cascade deletes; the default.
  PROTECT: Prevent deletion of the referenced object by raising django.db.models.ProtectedError, a subclass of django.db.IntegrityError.
  SET_NULL: Set the ForeignKey null; this is only possible if null is True.
  SET_DEFAULT: Set the ForeignKey to its default value; a default for the ForeignKey must be set.
  SET(): Set the ForeignKey to the value passed to SET(), or if a callable is passed in, the result of calling it. In most cases, passing a callable will be necessary to avoid executing queries at the time your models.py is imported:
  
  --- Ej1
  user = models.ForeignKey(User, blank=True, null=True, on_delete=models.SET_NULL)
  
  --- EJ2
  def get_sentinel_user():
      return User.objects.get_or_create(username='deleted')[0]
  
  class MyModel(models.Model):
      user = models.ForeignKey(User, on_delete=models.SET(get_sentinel_user))


